JSON
 4. Создать внешний репозиторий c названием JSON. 
 5. Клонировать репозиторий JSON на локальный компьютер.
git clone https://github.com/DanDemon13/JSON.git
 6. Внутри локального JSON создать файл “new.json”.
touch new.json
 7. Добавить файл под гит.
git add .
 8. Закоммитить файл.
git commit  -m "LevelAp"
 9. Отправить файл на внешний GitHub репозиторий.
git push
 10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON.
vi new.json
{	
        "firstName": "Daniil",
        "lasteName": "likov",
	"surName":"Alexandrovich",
	"Age": "25",
        "pets":"0",
        "desired Salary": "gooogol"
}
:wq

 11. Отправить изменения на внешний репозиторий.
git add .
git commit -am "add xml About Me"
git push
 12. Создать файл  preferences.json
touch preferences.json
 13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON.
vi preferences.json

{	
        "Favorite movie": "Henkog",
        "favorite series": "Game of Thrones",
	"favorite food":"burger",
	"favorite season": "summer",
        "pets":"0",
        "side you would like to visit": {"State":"Netherlands",
					"Town":"Amsterdam",
					 "the street":"Red light district"}

					
}
 14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON
touch sklls.json
vi sklls.json
{	
        "Soft skills": "Yes",
        "Hard skills": "Yes",
	"Web technologies":"Yes",
	"Testing and software development": "Yes",
        "testing basics":"Yes",
        "defect reports":Yes,
	"Bag reports"Yes
 					
}
:wq
 15. Отправить сразу 2 файла на внешний репозиторий.
git add .
git commit -am "Skill UpLevel"
git push
 16. На веб интерфейсе создать файл bug_report.json.
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.
 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 20. Синхронизировать внешний и локальный репозиторий JSON
-git pull


XML
 21. Создать внешний репозиторий c названием XML.
git clone https://github.com/DanDemon13/XML.git
 22. Клонировать репозиторий XML на локальный компьютер.
 23. Внутри локального XML создать файл “new.xml”.
touch new.xml
 24. Добавить файл под гит.
git add .
 25. Закоммитить файл.
git commit -am "add xml About Me"
 26. Отправить файл на внешний GitHub репозиторий.
git push
 27. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML.
 <?xml?>
<!--information about yourself-->
        <Name>Daniil</Name>
        <Nurname>Klikov</Name>
        <Background>Alexandrovich</Name>
        <Age>24</Age>
        <Pets>0</Pets>
        <DesiredSalary>Gooogol</Desired Salary>
</information
:wq
 28. Отправить изменения на внешний репозиторий.
git add .
git commit -am "information about yourself"
git push
 29. Создать файл preferences.xml
touch preferences.xml
 30. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML.
<?xml?>
<--information about your preferences-->
	<Favorite Movie>Henkog</Favorite>
	<Favorite Series>Game of Thrones</Favorite>
	<Favorite Food>Burger<\Favorite>
	<Favorite Season>Summer</Favorite>
	<Town>Amsterdam</Town>
</information
:wq
 31. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML
<?xml?>
<Skills to be studied>
		<Soft skills>Yes</Soft>
		<Hard skills>Yes</Hard>
		<Web technologies>Yes</Web>
		<Testing and software development>Yes</Testing>
		<testing basics>Yes</testing>
		<defect reports>Yes</defect>
		<Bag reports>Yes</Bag>
</Skills
:wq
 32. Сделать коммит в одну строку.
git commit -am "Skills information about yourself"
 33. Отправить сразу 2 файла на внешний репозиторий.
git add .
git push
 34. На веб интерфейсе создать файл bug_report.xml.
 35. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML.
<?xml?>
<!--Bug Report-->
	<Tupe>Bag</Tupe>
	<Priority>Medium</Priority>
	<Affects Verson/s>2.20</Affects Verson>
	<Components/s>None</Components/s>
	<Labels>None</Labels>
	<Environmant>www.test.website.com</Environmant>
  <Sprint>S22</Sprint22>
  <Epic Link>Chat</Epic Link>
  <Status>Open</Status>
  <Resolution>Unresolved</Resolution>
  <Fix Version/s>2.20</Fix Version>
</Bug
 37. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 38. Синхронизировать внешний и локальный репозиторий XML
git pull